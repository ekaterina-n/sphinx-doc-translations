# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2023, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 7.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-15 00:35+0000\n"
"PO-Revision-Date: 2018-03-29 15:10+0000\n"
"Language-Team: Italian (Italy) (https://app.transifex.com/sphinx-doc/teams/15434/it_IT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it_IT\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:5
msgid "Domains"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:9
msgid ""
"Originally, Sphinx was conceived for a single project, the documentation of "
"the Python language.  Shortly afterwards, it was made available for everyone"
" as a documentation tool, but the documentation of Python modules remained "
"deeply built in -- the most fundamental directives, like ``function``, were "
"designed for Python objects.  Since Sphinx has become somewhat popular, "
"interest developed in using it for many different purposes: C/C++ projects, "
"JavaScript, or even reStructuredText markup (like in this documentation)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:17
msgid ""
"While this was always possible, it is now much easier to easily support "
"documentation of projects using different programming languages or even ones"
" not supported by the main Sphinx distribution, by providing a **domain** "
"for every such purpose."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:22
msgid ""
"A domain is a collection of markup (reStructuredText :term:`directive`\\ s "
"and :term:`role`\\ s) to describe and link to :term:`object`\\ s belonging "
"together, e.g. elements of a programming language.  Directive and role names"
" in a domain have names like ``domain:name``, e.g. ``py:function``.  Domains"
" can also provide custom indices (like the Python Module Index)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:28
msgid ""
"Having domains means that there are no naming problems when one set of "
"documentation wants to refer to e.g. C++ and Python classes.  It also means "
"that extensions that support the documentation of whole new languages are "
"much easier to write."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:33
msgid ""
"This section describes what the domains that are included with Sphinx "
"provide. The domain API is documented as well, in the section :ref:`domain-"
"api`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:40
msgid "Basic Markup"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:42
msgid ""
"Most domains provide a number of :dfn:`object description directives`, used "
"to describe specific objects provided by modules.  Each directive requires "
"one or more signatures to provide basic information about what is being "
"described, and the content should be the description."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:47
msgid ""
"A domain will typically keep an internal index of all entities to aid cross-"
"referencing. Typically it will also add entries in the shown general index. "
"If you want to suppress the addition of an entry in the shown index, you can"
" give the directive option flag ``:no-index-entry:``. If you want to exclude"
" the object description from the table of contents, you can give the "
"directive option flag ``:no-contents-entry:``. If you want to typeset an "
"object description, without even making it available for cross-referencing, "
"you can give the directive option flag ``:no-index:`` (which implies ``:no-"
"index-entry:``). If you do not want to typeset anything, you can give the "
"directive option flag ``:no-typesetting:``.  This can for example be used to"
" create only a target and index entry for later reference. Though, note that"
" not every directive in every domain may support these options."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:63
msgid ""
"The directive option ``noindexentry`` in the Python, C, C++, and Javascript "
"domains."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:67
msgid ""
"The directive option ``:nocontentsentry:`` in the Python, C, C++, "
"Javascript, and reStructuredText domains."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:71
msgid ""
"The directive option ``no-typesetting`` in the Python, C, C++, Javascript, "
"and reStructuredText domains."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:77
msgid "The directive option ``:noindex:`` was renamed to ``:no-index:``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:79
msgid ""
"The directive option ``:noindexentry:`` was renamed to ``:no-index-entry:``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:81
msgid ""
"The directive option ``:nocontentsentry:`` was renamed to ``:no-contents-"
"entry:``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:84
msgid ""
"The previous names are retained as aliases, but will be deprecated and "
"removed in a future version of Sphinx."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:88
msgid "An example using a Python domain directive::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:95
msgid ""
"This describes the two Python functions ``spam`` and ``ham``.  (Note that "
"when signatures become too long, you can break them if you add a backslash "
"to lines that are continued in the next line.  Example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:103
msgid "(This example also shows how to use the ``:no-index:`` flag.)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:105
msgid ""
"The domains also provide roles that link back to these object descriptions. "
"For example, to link to one of the functions described in the example above,"
" you could say ::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:111
msgid ""
"As you can see, both directive and role names contain the domain name and "
"the directive name."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:114
msgid ""
"The directive option ``:no-typesetting:`` can be used to create a target "
"(and index entry) which can later be referenced by the roles provided by the"
" domain. This is particularly useful for literate programming:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:132
msgid "Default Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:133
msgid ""
"For documentation describing objects from solely one domain, authors will "
"not have to state again its name at each directive, role, etc... after "
"having specified a default. This can be done either via the config value "
":confval:`primary_domain` or via this directive:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:140
msgid ""
"Select a new default domain.  While the :confval:`primary_domain` selects a "
"global default, this only has an effect within the same file."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:143
msgid ""
"If no other default is selected, the Python domain (named ``py``) is the "
"default one, mostly for compatibility with documentation written for older "
"versions of Sphinx."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:147
msgid ""
"Directives and roles that belong to the default domain can be mentioned "
"without giving the domain name, i.e. ::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:157
msgid "Cross-referencing syntax"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:159
msgid ""
"For cross-reference roles provided by domains, the same facilities exist as "
"for general cross-references.  See :ref:`xref-syntax`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:162
msgid "In short:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:164
msgid ""
"You may supply an explicit title and reference target: ``:role:`title "
"<target>``` will refer to *target*, but the link text will be *title*."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:167
msgid ""
"If you prefix the content with ``!``, no reference/hyperlink will be "
"created."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:169
msgid ""
"If you prefix the content with ``~``, the link text will only be the last "
"component of the target.  For example, ``:py:meth:`~Queue.Queue.get``` will "
"refer to ``Queue.Queue.get`` but only display ``get`` as the link text."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:176
msgid "The Python Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:178
msgid ""
"The Python domain (name **py**) provides the following directives for module"
" declarations:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:183
msgid ""
"This directive marks the beginning of the description of a module (or "
"package submodule, in which case the name should be fully qualified, "
"including the package name).  A description of the module such as the "
"docstring can be placed in the body of the directive."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:188
msgid "This directive will also cause an entry in the global module index."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:192
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2060
msgid "Module directives support body content."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:195
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:253
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:301
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:335
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:389
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:434
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:466
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:497
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2222
msgid "options"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:199
msgid ""
"Indicate platforms which the module is available (if it is available on all "
"platforms, the option should be omitted).  The keys are short identifiers; "
"examples that are in use include \"IRIX\", \"Mac\", \"Windows\" and "
"\"Unix\".  It is important to use a key which has already been used when "
"applicable."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:208
msgid ""
"Consist of one sentence describing the module's purpose -- it is currently "
"only used in the Global Module Index."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:214
msgid ""
"Mark a module as deprecated; it will be designated as such in various "
"locations then."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:221
msgid ""
"This directive tells Sphinx that the classes, functions etc. documented from"
" here are in the given module (like :rst:dir:`py:module`), but it will not "
"create index entries, an entry in the Global Module Index, or a link target "
"for :rst:role:`py:mod`.  This is helpful in situations where documentation "
"for things in a module is spread over multiple files or sections -- one "
"location has the :rst:dir:`py:module` directive, the others only "
":rst:dir:`py:currentmodule`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:229
msgid "The following directives are provided for module and class contents:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:234
msgid ""
"Describes a module-level function. The signature should include the "
"parameters, together with optional type parameters, as given in the Python "
"function definition, see :ref:`signatures`. For example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:243
msgid "For methods you should use :rst:dir:`py:method`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:245
msgid ""
"The description normally includes information about the parameters required "
"and how they are used (especially whether mutable objects passed as "
"parameters are modified), side effects, and possible exceptions."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:249
msgid ""
"This information can (in any ``py`` directive) optionally be given in a "
"structured form, see :ref:`info-field-lists`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:257
msgid "Indicate the function is an async function."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:264
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:315
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:393
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:448
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:515
msgid ""
"Describe the location where the object is defined if the object is imported "
"from other modules"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:278
msgid ""
"Ensures that the function's arguments will be emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:287
msgid ""
"Ensure that the function's type parameters are emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:296
msgid ""
"Describes global data in a module, including both variables and values used "
"as \"defined constants.\"  Class and object attributes are not documented "
"using this environment."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:330
msgid ""
"Describes an exception class. The signature can, but need not include "
"parentheses with constructor arguments, or may optionally include type "
"parameters (see :pep:`695`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:339
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:401
msgid "Indicate the class is a final class."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:352
msgid "See :rst:dir:`py:class:single-line-parameter-list`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:359
msgid "See :rst:dir:`py:class:single-line-type-parameter-list`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:367
msgid ""
"Describes a class. The signature can optionally include type parameters (see"
" :pep:`695`) or parentheses with parameters which will be shown as the "
"constructor arguments. See also :ref:`signatures`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:372
msgid ""
"Methods and attributes belonging to the class should be placed in this "
"directive's body.  If they are placed outside, the supplied name should "
"contain the class name so that cross-references still work.  Example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:386
msgid "The first way is the preferred one."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:414
msgid ""
"Ensures that the class constructor's arguments will be emitted on a single "
"logical line, overriding :confval:`python_maximum_signature_line_length` and"
" :confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:423
msgid ""
"Ensure that the class type parameters are emitted on a single logical line, "
"overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:429
msgid ""
"Describes an object data attribute.  The description should include "
"information about the type of the data to be expected and whether it may be "
"changed directly."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:461
msgid "Describes an object property."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:470
msgid "Indicate the property is abstract."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:475
msgid "Indicate the property is a classmethod."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:491
msgid ""
"Describes an object method.  The parameters should not include the ``self`` "
"parameter.  The description should include similar information to that "
"described for ``function``.  See also :ref:`signatures` and :ref:`info-"
"field-lists`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:501
msgid "Indicate the method is an abstract method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:508
msgid "Indicate the method is an async method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:523
msgid "Indicate the method is a class method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:530
msgid "Indicate the method is a final method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:543
msgid ""
"Ensures that the method's arguments will be emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:552
msgid ""
"Ensure that the method's type parameters are emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:561
msgid "Indicate the method is a static method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:569
msgid ""
"Like :rst:dir:`py:method`, but indicates that the method is a static method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:576
msgid ""
"Like :rst:dir:`py:method`, but indicates that the method is a class method."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:584
msgid ""
"Describes a decorator function.  The signature should represent the usage as"
" a decorator.  For example, given the functions"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:599
msgid "the descriptions should look like this::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:609
msgid "(as opposed to ``.. py:decorator:: removename(func)``.)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:611
msgid ""
"There is no ``py:deco`` role to link to a decorator that is marked up with "
"this directive; rather, use the :rst:role:`py:func` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:617
msgid ""
"Ensures that the decorator's arguments will be emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:626
msgid ""
"Ensure that the decorator's type parameters are emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:636
msgid "Same as :rst:dir:`py:decorator`, but for decorators that are methods."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:638
msgid "Refer to a decorator method using the :rst:role:`py:meth` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:643
msgid "Python Signatures"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:645
msgid ""
"Signatures of functions, methods and class constructors can be given like "
"they would be written in Python."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:648
msgid ""
"Default values for optional arguments can be given (but if they contain "
"commas, they will confuse the signature parser).  Python 3-style argument "
"annotations can also be given as well as return type annotations::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:654
msgid ""
"For functions with optional parameters that don't have default values "
"(typically functions implemented in C extension modules without keyword "
"argument support), you can use brackets to specify the optional parts:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:661
msgid "It is customary to put the opening bracket before the comma."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:663
msgid ""
"Python 3.12 introduced *type parameters*, which are type variables declared "
"directly  within the class or function definition:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:674
msgid "The corresponding reStructuredText documentation would be:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:682
msgid "See :pep:`695` and :pep:`696` for details and the full specification."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:687
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1764
msgid "Info field lists"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:692
msgid "meta fields are added."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:694
msgid ""
"Inside Python object description directives, reST field lists with these "
"fields are recognized and formatted nicely:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:697
msgid ""
"``param``, ``parameter``, ``arg``, ``argument``, ``key``, ``keyword``: "
"Description of a parameter."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:699
msgid "``type``: Type of a parameter.  Creates a link if possible."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:700
msgid ""
"``raises``, ``raise``, ``except``, ``exception``: That (and when) a specific"
" exception is raised."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:702
msgid "``var``, ``ivar``, ``cvar``: Description of a variable."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:703
msgid "``vartype``: Type of a variable.  Creates a link if possible."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:704
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:891
msgid "``returns``, ``return``: Description of the return value."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:705
msgid "``rtype``: Return type.  Creates a link if possible."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:706
msgid ""
"``meta``: Add metadata to description of the python object.  The metadata "
"will not be shown on output document.  For example, ``:meta private:`` "
"indicates the python object is private member.  It is used in "
":py:mod:`sphinx.ext.autodoc` for filtering members."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:713
msgid ""
"In current release, all ``var``, ``ivar`` and ``cvar`` are represented as "
"\"Variable\".  There is no difference at all."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:716
msgid ""
"The field names must consist of one of these keywords and an argument "
"(except for ``returns`` and ``rtype``, which do not need an argument).  This"
" is best explained by an example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:734
msgid "This will render like this:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:739
msgid "Send a message to a recipient"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Parameters"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:741
msgid "The person sending the message"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:742
msgid "The recipient of the message"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:743
msgid "The body of the message"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:744
msgid "The priority of the message, can be a number 1-5"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Returns"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:746
msgid "the message id"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Return type"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Raises"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:748
msgid "if the message_body exceeds 160 characters"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:749
msgid "if the message_body is not a basestring"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:751
msgid ""
"It is also possible to combine parameter type and description, if the type "
"is a single word, like this::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:758
msgid ""
"Container types such as lists and dictionaries can be linked automatically "
"using the following syntax::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:768
msgid ""
"Multiple types in a type field will be linked automatically if separated by "
"the word \"or\"::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:778
msgid "Cross-referencing Python objects"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:780
msgid ""
"The following roles refer to objects in modules and are possibly hyperlinked"
" if a matching identifier is found:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:785
msgid ""
"Reference a module; a dotted name may be used.  This should also be used for"
" package names."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:790
msgid ""
"Reference a Python function; dotted names may be used.  The role text needs "
"not include trailing parentheses to enhance readability; they will be added "
"automatically by Sphinx if the :confval:`add_function_parentheses` config "
"value is ``True`` (the default)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:797
msgid "Reference a module-level variable."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:801
msgid ""
"Reference a \"defined\" constant.  This may be a Python variable that is not"
" intended to be changed."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:806
msgid "Reference a class; a dotted name may be used."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:810
msgid ""
"Reference a method of an object.  The role text can include the type name "
"and the method name; if it occurs within the description of a type, the type"
" name can be omitted.  A dotted name may be used."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:816
msgid "Reference a data attribute of an object."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:818
msgid "The role is also able to refer to property."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:822
msgid "Reference an exception.  A dotted name may be used."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:826
msgid ""
"Reference an object of unspecified type.  Useful e.g. as the "
":confval:`default_role`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:831
msgid ""
"The name enclosed in this markup can include a module name and/or a class "
"name. For example, ``:py:func:`filter``` could refer to a function named "
"``filter`` in the current module, or the built-in function of that name.  In"
" contrast, ``:py:func:`foo.filter``` clearly refers to the ``filter`` "
"function in the ``foo`` module."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:837
msgid ""
"Normally, names in these roles are searched first without any further "
"qualification, then with the current module name prepended, then with the "
"current module and class name (if any) prepended.  If you prefix the name "
"with a dot, this order is reversed.  For example, in the documentation of "
"Python's :mod:`codecs` module, ``:py:func:`open``` always refers to the "
"built-in function, while ``:py:func:`.open``` refers to :func:`codecs.open`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:844
msgid ""
"A similar heuristic is used to determine whether the name is an attribute of"
" the currently documented class."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:847
msgid ""
"Also, if the name is prefixed with a dot, and no exact match is found, the "
"target is taken as a suffix and all object names with that suffix are "
"searched. For example, ``:py:meth:`.TarFile.close``` references the "
"``tarfile.TarFile.close()`` function, even if the current module is not "
"``tarfile``.  Since this can get ambiguous, if there is more than one "
"possible match, you will get a warning from Sphinx."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:854
msgid ""
"Note that you can combine the ``~`` and ``.`` prefixes: "
"``:py:meth:`~.TarFile.close``` will reference the "
"``tarfile.TarFile.close()`` method, but the visible link caption will only "
"be ``close()``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:862
msgid "The C Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:864
msgid "The C domain (name **c**) is suited for documentation of C API."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:869
msgid "Describes a C struct member or variable. Example signature::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:873
msgid "The difference between the two directives is only cosmetic."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:877
msgid "Describes a C function. The signature should be given as in C, e.g.::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:881
msgid ""
"Note that you don't have to backslash-escape asterisks in the signature, as "
"it is not parsed by the reST inliner."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:884
msgid ""
"In the description of a function you can use the following info fields (see "
"also :ref:`info-field-lists`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:887
msgid ""
"``param``, ``parameter``, ``arg``, ``argument``, Description of a parameter."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:889
msgid ""
"``type``: Type of a parameter, written as if passed to the "
":rst:role:`c:expr` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:892
msgid ""
"``rtype``: Return type, written as if passed to the :rst:role:`c:expr` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:894
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1776
msgid ""
"``retval``, ``retvals``: An alternative to ``returns`` for describing the "
"result of the function."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:897
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1780
msgid "The ``retval`` field type."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:900
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1071
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1537
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2228
msgid "For example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:910
msgid "which renders as"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:917
msgid "description of the first parameter."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:918
msgid "description of the second parameter."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:919
msgid "a result."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Return values"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:920
msgid "under some conditions."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:921
msgid "under some other conditions as well."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:926
msgid ""
"Ensures that the function's parameters will be emitted on a single logical "
"line, overriding :confval:`c_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:936
msgid ""
"Describes a C macro, i.e., a C-language ``#define``, without the replacement"
" text."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:939
msgid ""
"In the description of a macro you can use the same info fields as for the "
":rst:dir:`c:function` directive."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:942
msgid "The function style variant."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:948
msgid ""
"Ensures that the macro's parameters will be emitted on a single logical "
"line, overriding :confval:`c_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:956
msgid "Describes a C struct."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:962
msgid "Describes a C union."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:968
msgid "Describes a C enum."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:974
msgid "Describes a C enumerator."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:981
msgid ""
"Describes a C type, either as a typedef, or the alias for an unspecified "
"type."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:987
msgid "Cross-referencing C constructs"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:989
msgid ""
"The following roles create cross-references to C-language constructs if they"
" are defined in the documentation:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1003
msgid ""
"Reference a C declaration, as defined above. Note that :rst:role:`c:member`,"
" :rst:role:`c:data`, and :rst:role:`c:var` are equivalent."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1007
msgid "The var, struct, union, enum, and enumerator roles."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1012
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1478
msgid "Anonymous Entities"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1014
msgid ""
"C supports anonymous structs, enums, and unions. For the sake of "
"documentation they must be given some name that starts with ``@``, e.g., "
"``@42`` or ``@data``. These names can also be used in cross-references, "
"though nested symbols will be found even when omitted. The ``@...`` name "
"will always be rendered as **[anonymous]** (possibly as a link)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1022
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1488
msgid "Example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1034
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1500
msgid "This will be rendered as:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1052
msgid "Explicit ref: :c:var:`Data.@data.a`. Short-hand ref: :c:var:`Data.a`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1058
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1524
msgid "Aliasing Declarations"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1062
msgid ""
"Sometimes it may be helpful list declarations elsewhere than their main "
"documentation, e.g., when creating a synopsis of an interface. The following"
" directive can be used for this purpose."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1068
msgid ""
"Insert one or more alias declarations. Each entity can be specified as they "
"can in the :rst:role:`c:any` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1079
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1542
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1552
msgid "becomes"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1091
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1467
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1561
msgid "Options"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1094
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1564
msgid ""
"Insert nested declarations as well, up to the total depth given. Use 0 for "
"infinite depth and 1 for just the mentioned declaration. Defaults to 1."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1102
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1572
msgid ""
"Skip the mentioned declarations and only render nested declarations. "
"Requires ``maxdepth`` either 0 or at least 2."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1112
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1639
msgid "Inline Expressions and Types"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1117
msgid ""
"Insert a C expression or type either as inline code (``cpp:expr``) or inline"
" text (``cpp:texpr``). For example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1129
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1656
msgid "will be rendered as follows:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1139
msgid "An expression: :c:expr:`a * f(a)` (or as text: :c:texpr:`a * f(a)`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1141
msgid "A type: :c:expr:`const Data*` (or as text :c:texpr:`const Data*`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1148
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1678
msgid "Namespacing"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1152
msgid ""
"The C language it self does not support namespacing, but it can sometimes be"
" useful to emulate it in documentation, e.g., to show alternate "
"declarations. The feature may also be used to document members of "
"structs/unions/enums separate from their parent declaration."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1157
msgid ""
"The current scope can be changed using three namespace directives.  They "
"manage a stack declarations where ``c:namespace`` resets the stack and "
"changes a given scope."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1161
msgid ""
"The ``c:namespace-push`` directive changes the scope to a given inner scope "
"of the current one."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1164
msgid ""
"The ``c:namespace-pop`` directive undoes the most recent ``c:namespace-"
"push`` directive."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1169
msgid ""
"Changes the current scope for the subsequent objects to the given scope, and"
" resets the namespace directive stack. Note that nested scopes can be "
"specified by separating with a dot, e.g.::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1175
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1699
msgid ""
"All subsequent objects will be defined as if their name were declared with "
"the scope prepended. The subsequent cross-references will be searched for "
"starting in the current scope."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1179
msgid "Using ``NULL`` or ``0`` as the scope will change to global scope."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1183
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1730
msgid "Change the scope relatively to the current scope. For example, after::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1189
msgid "the current scope will be ``A.B.C.D``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1193
msgid ""
"Undo the previous ``c:namespace-push`` directive (*not* just pop a scope). "
"For example, after::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1202
msgid "the current scope will be ``A.B`` (*not* ``A.B.C``)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1204
msgid ""
"If no previous ``c:namespace-push`` directive has been used, but only a "
"``c:namespace`` directive, then the current scope will be reset to global "
"scope.  That is, ``.. c:namespace:: A.B`` is equivalent to::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1213
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1942
msgid "Configuration Variables"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1215
msgid "See :ref:`c-config`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1221
msgid "The C++ Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1223
msgid "The C++ domain (name **cpp**) supports documenting C++ projects."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1226
msgid "Directives for Declaring Entities"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1228
msgid ""
"The following directives are available. All declarations can start with a "
"visibility statement (``public``, ``private`` or ``protected``)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1234
msgid ""
"Describe a class/struct, possibly with specification of inheritance, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1238
msgid ""
"The difference between :rst:dir:`cpp:class` and :rst:dir:`cpp:struct` is "
"only cosmetic: the prefix rendered in the output, and the specifier shown in"
" the index."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1242
msgid "The class can be directly declared inside a nested scope, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1246
msgid "A class template can be declared::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1250
msgid "or with a line break::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1255
msgid "Full and partial template specialisations can be declared::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1263
msgid "The :rst:dir:`cpp:struct` directive."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1268
msgid "Describe a function or member function, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1294
msgid "Function templates can also be described::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1299
msgid "and function template specialisations::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1307
msgid ""
"Ensures that the function's parameters will be emitted on a single logical "
"line, overriding :confval:`cpp_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1316
msgid "Describe a variable or member variable, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1324
msgid "Variable templates can also be described::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1333
msgid ""
"Describe a type as in a typedef declaration, a type alias declaration, or "
"simply the name of a type with unspecified type, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1348
msgid "A type alias can also be templated::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1353
msgid "The example are rendered as follows."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1359
msgid "A typedef-like declaration of a type."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1365
msgid "Declaration of a type alias with unspecified type."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1371
msgid "Declaration of a type alias."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1382
msgid ""
"Describe a (scoped) enum, possibly with the underlying type specified.  Any "
"enumerators declared inside an unscoped enum will be declared both in the "
"enum scope and in the parent scope.  Examples::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1406
msgid "Describe an enumerator, optionally with its value defined, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1414
msgid "Describe a union."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1420
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1581
msgid ""
"The support for concepts is experimental. It is based on the current draft "
"standard and the Concepts Technical Specification. The features may change "
"as they evolve."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1424
msgid ""
"Describe a concept. It must have exactly 1 template parameter list. The name"
" may be a nested name. Example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1444
msgid "This will render as follows:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1448
msgid ""
"Proxy to an element of a notional sequence that can be compared, indirected,"
" or incremented."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1451
msgid "**Notation**"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1455
msgid "An lvalue."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1457
msgid "**Valid Expressions**"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1459
msgid ":cpp:expr:`*r`, when :cpp:expr:`r` is dereferenceable."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1460
msgid ""
":cpp:expr:`++r`, with return type :cpp:expr:`It&`, when :cpp:expr:`r` is "
"incrementable."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1469
msgid "Some directives support options:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1471
msgid ""
"``:no-index-entry:`` and ``:no-contents-entry:``, see :ref:`basic-domain-"
"markup`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1472
msgid ""
"``:tparam-line-spec:``, for templated declarations. If specified, each "
"template parameter will be rendered on a separate line."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1480
msgid ""
"C++ supports anonymous namespaces, classes, enums, and unions. For the sake "
"of documentation they must be given some name that starts with ``@``, e.g., "
"``@42`` or ``@data``. These names can also be used in cross-references and "
"(type) expressions, though nested symbols will be found even when omitted. "
"The ``@...`` name will always be rendered as **[anonymous]** (possibly as a "
"link)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1518
msgid ""
"Explicit ref: :cpp:var:`Data::@data::a`. Short-hand ref: :cpp:var:`Data::a`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1526
msgid ""
"Sometimes it may be helpful list declarations elsewhere than their main "
"documentation, e.g., when creating a synopsis of a class interface. The "
"following directive can be used for this purpose."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1532
msgid ""
"Insert one or more alias declarations. Each entity can be specified as they "
"can in the :rst:role:`cpp:any` role. If the name of a function is given (as "
"opposed to the complete signature), then all overloads of the function will "
"be listed."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1547
msgid "whereas::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1579
msgid "Constrained Templates"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1585
msgid "Sphinx does not currently support ``requires`` clauses."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1588
msgid "Placeholders"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1590
msgid ""
"Declarations may use the name of a concept to introduce constrained template"
" parameters, or the keyword ``auto`` to introduce unconstrained template "
"parameters::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1604
msgid "Template Introductions"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1606
msgid ""
"Simple constrained function or class templates can be declared with a "
"`template introduction` instead of a template parameter list::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1619
msgid "They are rendered as follows."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1625
msgid ""
"A function template with a template parameter constrained to be an Iterator."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1631
msgid ""
"A class template with a template parameter constrained to be "
"LessThanComparable."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1634
msgid ""
"Note however that no checking is performed with respect to parameter "
"compatibility. E.g., ``Iterator{A, B, C}`` will be accepted as an "
"introduction even though it would not be valid C++."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1644
msgid ""
"Insert a C++ expression or type either as inline code (``cpp:expr``) or "
"inline text (``cpp:texpr``). For example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1666
msgid ""
"An expression: :cpp:expr:`a * f(a)` (or as text: :cpp:texpr:`a * f(a)`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1668
msgid ""
"A type: :cpp:expr:`const MySortedContainer<int>&` (or as text "
":cpp:texpr:`const MySortedContainer<int>&`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1671
msgid "The :rst:role:`cpp:expr` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1674
msgid "The :rst:role:`cpp:texpr` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1680
msgid ""
"Declarations in the C++ domain are as default placed in global scope.  The "
"current scope can be changed using three namespace directives.  They manage "
"a stack declarations where ``cpp:namespace`` resets the stack and changes a "
"given scope."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1685
msgid ""
"The ``cpp:namespace-push`` directive changes the scope to a given inner "
"scope of the current one."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1688
msgid ""
"The ``cpp:namespace-pop`` directive undoes the most recent ``cpp:namespace-"
"push`` directive."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1693
msgid ""
"Changes the current scope for the subsequent objects to the given scope, and"
" resets the namespace directive stack.  Note that the namespace does not "
"need to correspond to C++ namespaces, but can end in names of classes, "
"e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1703
msgid ""
"Using ``NULL``, ``0``, or ``nullptr`` as the scope will change to global "
"scope."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1706
msgid "A namespace declaration can also be templated, e.g.,::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1715
msgid ""
"declares ``size`` as a member function of the class template "
"``std::vector``.  Equivalently this could have been declared using::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1723
msgid "or::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1736
msgid "the current scope will be ``A::B::C::D``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1742
msgid ""
"Undo the previous ``cpp:namespace-push`` directive (*not* just pop a scope)."
" For example, after::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1751
msgid "the current scope will be ``A::B`` (*not* ``A::B::C``)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1753
msgid ""
"If no previous ``cpp:namespace-push`` directive has been used, but only a "
"``cpp:namespace`` directive, then the current scope will be reset to global "
"scope.  That is, ``.. cpp:namespace:: A::B`` is equivalent to::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1766
msgid ""
"All the C++ directives for declaring entities support the following info "
"fields (see also :ref:`info-field-lists`):"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1769
msgid "``tparam``: Description of a template parameter."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1771
msgid ""
"The :rst:dir:`cpp:function` directive additionally supports the following "
"fields:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1774
msgid ""
"``param``, ``parameter``, ``arg``, ``argument``: Description of a parameter."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1775
msgid "``returns``, ``return``: Description of a return value."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1778
msgid ""
"`throws`, `throw`, `exception`: Description of a possibly thrown exception."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1786
msgid "Cross-referencing"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1788
msgid "These roles link to the given declaration types:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1801
msgid ""
"Reference a C++ declaration by name (see below for details).  The name must "
"be properly qualified relative to the position of the link."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1804
msgid ""
"The :rst:role:`cpp:struct` role as alias for the :rst:role:`cpp:class` role."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1808
msgid "Note on References with Templates Parameters/Arguments"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1810
msgid ""
"These roles follow the Sphinx :ref:`xref-syntax` rules. This means care must"
" be taken when referencing a (partial) template specialization, e.g. if the "
"link looks like this: ``:cpp:class:`MyClass<int>```. This is interpreted as "
"a link to ``int`` with a title of ``MyClass``. In this case, escape the "
"opening angle bracket with a backslash, like this: "
"``:cpp:class:`MyClass\\<int>```."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1817
msgid ""
"When a custom title is not needed it may be useful to use the roles for "
"inline expressions, :rst:role:`cpp:expr` and :rst:role:`cpp:texpr`, where "
"angle brackets do not need escaping."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1822
msgid "Declarations without template parameters and template arguments"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1824
msgid ""
"For linking to non-templated declarations the name must be a nested name, "
"e.g., ``f`` or ``MyClass::f``."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1829
msgid "Overloaded (member) functions"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1831
msgid ""
"When a (member) function is referenced using just its name, the reference "
"will point to an arbitrary matching overload. The :rst:role:`cpp:any` and "
":rst:role:`cpp:func` roles use an alternative format, which simply is a "
"complete function declaration. This will resolve to the exact matching "
"overload. As example, consider the following class declaration:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1846
msgid "References using the :rst:role:`cpp:func` role:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1848
msgid "Arbitrary overload: ``C::f``, :cpp:func:`C::f`"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1849
msgid "Also arbitrary overload: ``C::f()``, :cpp:func:`C::f()`"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1850
msgid "Specific overload: ``void C::f()``, :cpp:func:`void C::f()`"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1851
msgid "Specific overload: ``void C::f(int)``, :cpp:func:`void C::f(int)`"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1852
msgid ""
"Specific overload: ``void C::f(double)``, :cpp:func:`void C::f(double)`"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1853
msgid ""
"Specific overload: ``void C::f(double) const``, :cpp:func:`void C::f(double)"
" const`"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1856
msgid ""
"Note that the :confval:`add_function_parentheses` configuration variable "
"does not influence specific overload references."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1863
msgid "Templated declarations"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1865
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1902
msgid "Assume the following declarations."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1875
msgid ""
"In general the reference must include the template parameter declarations, "
"and template arguments for the prefix of qualified names. For example:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1878
msgid ""
"``template\\<typename TOuter> Wrapper::Outer`` "
"(:cpp:class:`template\\<typename TOuter> Wrapper::Outer`)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1880
msgid ""
"``template\\<typename TOuter> template\\<typename TInner> "
"Wrapper::Outer<TOuter>::Inner`` (:cpp:class:`template\\<typename TOuter> "
"template\\<typename TInner> Wrapper::Outer<TOuter>::Inner`)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1883
msgid ""
"Currently the lookup only succeed if the template parameter identifiers are "
"equal strings.  That is, ``template\\<typename UOuter> Wrapper::Outer`` will"
" not work."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1887
msgid ""
"As a shorthand notation, if a template parameter list is omitted, then the "
"lookup will assume either a primary template or a non-template, but not a "
"partial template specialisation. This means the following references work as"
" well:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1892
msgid "``Wrapper::Outer`` (:cpp:class:`Wrapper::Outer`)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1894
msgid "``Wrapper::Outer::Inner`` (:cpp:class:`Wrapper::Outer::Inner`)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1896
msgid ""
"``template\\<typename TInner> Wrapper::Outer::Inner`` "
"(:cpp:class:`template\\<typename TInner> Wrapper::Outer::Inner`)"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1900
msgid "(Full) Template Specialisations"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1919
msgid ""
"In general the reference must include a template parameter list for each "
"template argument list.  The full specialisation above can therefore be "
"referenced with ``template\\<> Outer\\<int>`` (:cpp:class:`template\\<> "
"Outer\\<int>`) and ``template\\<> template\\<> Outer\\<int>::Inner\\<bool>``"
" (:cpp:class:`template\\<> template\\<> Outer\\<int>::Inner\\<bool>`).  As a"
" shorthand the empty template parameter list can be omitted, e.g., "
"``Outer\\<int>`` (:cpp:class:`Outer\\<int>`) and "
"``Outer\\<int>::Inner\\<bool>`` (:cpp:class:`Outer\\<int>::Inner\\<bool>`)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1929
msgid "Partial Template Specialisations"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1931
msgid "Assume the following declaration."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1936
msgid ""
"References to partial specialisations must always include the template "
"parameter lists, e.g., ``template\\<typename T> Outer\\<T*>`` "
"(:cpp:class:`template\\<typename T> Outer\\<T*>`).  Currently the lookup "
"only succeed if the template parameter identifiers are equal strings."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1944
msgid "See :ref:`cpp-config`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1949
msgid "The Standard Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1951
msgid ""
"The so-called \"standard\" domain collects all markup that doesn't warrant a"
" domain of its own.  Its directives and roles are not prefixed with a domain"
" name."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1955
msgid ""
"The standard domain is also where custom object descriptions, added using "
"the :func:`~sphinx.application.Sphinx.add_object_type` API, are placed."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1958
msgid ""
"There is a set of directives allowing documenting command-line programs:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1962
msgid ""
"Describes a command line argument or switch.  Option argument names should "
"be enclosed in angle brackets.  Examples::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1973
msgid ""
"The directive will create cross-reference targets for the given options, "
"referenceable by :rst:role:`option` (in the example case, you'd use "
"something like ``:option:`dest_dir```, ``:option:`-m```, or "
"``:option:`--module```)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1979
msgid ""
"One can cross-reference including an option value: "
"``:option:`--module=foobar```, ,``:option:`--module[=foobar]``` or "
"``:option:`--module foobar```."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1982
msgid ""
"Use :confval:`option_emphasise_placeholders` for parsing of \"variable "
"part\" of a literal text (similarly to the :rst:role:`samp` role)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1985
msgid ""
"``cmdoption`` directive is a deprecated alias for the ``option`` directive."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1989
msgid ""
"Describes an environment variable that the documented code or program uses "
"or defines.  Referenceable by :rst:role:`envvar`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1994
msgid ""
"Like :rst:dir:`py:currentmodule`, this directive produces no output. "
"Instead, it serves to notify Sphinx that all following :rst:dir:`option` "
"directives document options for the program called *name*."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:1998
msgid ""
"If you use :rst:dir:`program`, you have to qualify the references in your "
":rst:role:`option` roles by the program name, so if you have the following "
"situation ::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2014
msgid ""
"then ``:option:`rm -r``` would refer to the first option, while "
"``:option:`svn -r``` would refer to the second one."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2017
msgid ""
"If ``None`` is passed to the argument, the directive will reset the current "
"program name."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2020
msgid ""
"The program name may contain spaces (in case you want to document "
"subcommands like ``svn add`` and ``svn commit`` separately)."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2025
msgid ""
"There is also a very generic object description directive, which is not tied"
" to any domain:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2031
msgid ""
"This directive produces the same formatting as the specific ones provided by"
" domains, but does not create index entries or cross-referencing targets. "
"Example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2041
msgid "The JavaScript Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2043
msgid "The JavaScript domain (name **js**) provides the following directives:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2047
msgid ""
"This directive sets the module name for object declarations that follow "
"after. The module name is used in the global module index and in cross "
"references. This directive does not create an object heading like "
":rst:dir:`py:class` would, for example."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2052
msgid ""
"By default, this directive will create a linkable entity and will cause an "
"entry in the global module index, unless the ``no-index`` option is "
"specified.  If this option is specified, the directive will only update the "
"current module name."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2064
msgid ""
"Describes a JavaScript function or method.  If you want to describe "
"arguments as optional use square brackets as :ref:`documented <signatures>` "
"for Python signatures."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2068
msgid ""
"You can use fields to give more details about arguments and their expected "
"types, errors which may be thrown by the function, and the value being "
"returned::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2082
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2130
msgid "This is rendered as:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Arguments"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2087
msgid "An URI to the location of the resource."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2088
msgid "Gets called with the object."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2089
msgid ""
"Gets called in case the request fails. And a lot of other text so we need "
"multiple lines."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:0
msgid "Throws"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2092
msgid "For whatever reason in that case."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2093
msgid "Something."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2098
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2114
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2141
msgid ""
"Ensures that the function's parameters will be emitted on a single logical "
"line, overriding :confval:`javascript_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2106
msgid ""
"This directive is an alias for :rst:dir:`js:function`, however it describes "
"a function that is implemented as a method on a class object."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2122
msgid ""
"Describes a constructor that creates an object.  This is basically like a "
"function but will show up with a `class` prefix::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2135
msgid "The name of the animal"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2136
msgid "an optional age for the animal"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2149
msgid "Describes a global variable or constant."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2153
msgid "Describes the attribute *name* of *object*."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2157
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2254
msgid "These roles are provided to refer to the described objects:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2168
msgid "The reStructuredText domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2170
msgid ""
"The reStructuredText domain (name **rst**) provides the following "
"directives:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2174
msgid ""
"Describes a reST directive.  The *name* can be a single directive name or "
"actual directive syntax (`..` prefix and `::` suffix) with arguments that "
"will be rendered differently.  For example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2186
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2210
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2245
msgid "will be rendered as:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2191
#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2250
msgid "Foo description."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2196
msgid "Bar description."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2200
msgid ""
"Describes an option for reST directive.  The *name* can be a single option "
"name or option name with arguments which separated with colon (``:``). For "
"example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2226
msgid "Describe the type of option value."
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2239
msgid "Describes a reST role.  For example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2262
msgid "The Math Domain"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2264
msgid "The math domain (name **math**) provides the following roles:"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2268
msgid ""
"Role for cross-referencing equations defined by :rst:dir:`math` directive "
"via their label.  Example::"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2280
msgid "More domains"
msgstr ""

#: ../../sphinx/doc/usage/restructuredtext/domains.rst:2282
msgid ""
"The sphinx-contrib_ repository contains more domains available as "
"extensions; currently Ada_, CoffeeScript_, Erlang_, HTTP_, Lasso_, MATLAB_, "
"PHP_, and Ruby_ domains. Also available are domains for `Chapel`_, `Common "
"Lisp`_, dqn_, Go_, Jinja_, Operation_, and Scala_."
msgstr ""
