# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Georg Brandl <g.brandl@gmx.net>, 2023
# Lu <lu2github@gmail.com>, 2023
# Melia Lee <lixiuyu97@163.com>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-19 00:42+0000\n"
"PO-Revision-Date: 2023-10-03 00:37+0000\n"
"Last-Translator: Melia Lee <lixiuyu97@163.com>, 2023\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/usage/domains/python.rst:5
msgid "The Python Domain"
msgstr "Python域"

#: ../../sphinx/doc/usage/domains/python.rst:9
msgid ""
"The Python domain (name **py**) provides the following directives for module"
" declarations:"
msgstr "Python域(name **py**)为模块声明提供了以下指令:"

#: ../../sphinx/doc/usage/domains/python.rst:14
msgid ""
"This directive marks the beginning of the description of a module (or "
"package submodule, in which case the name should be fully qualified, "
"including the package name).  A description of the module such as the "
"docstring can be placed in the body of the directive."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:19
msgid "This directive will also cause an entry in the global module index."
msgstr "该指令还将导致全局模块索引中的条目。"

#: ../../sphinx/doc/usage/domains/python.rst:23
msgid "Module directives support body content."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:26
#: ../../sphinx/doc/usage/domains/python.rst:83
#: ../../sphinx/doc/usage/domains/python.rst:131
#: ../../sphinx/doc/usage/domains/python.rst:165
#: ../../sphinx/doc/usage/domains/python.rst:219
#: ../../sphinx/doc/usage/domains/python.rst:264
#: ../../sphinx/doc/usage/domains/python.rst:296
#: ../../sphinx/doc/usage/domains/python.rst:327
msgid "options"
msgstr "选项"

#: ../../sphinx/doc/usage/domains/python.rst:30
msgid ""
"Indicate platforms which the module is available (if it is available on all "
"platforms, the option should be omitted).  The keys are short identifiers; "
"examples that are in use include \"IRIX\", \"Mac\", \"Windows\" and "
"\"Unix\".  It is important to use a key which has already been used when "
"applicable."
msgstr ""
"指出模块可用的平台（如果它在所有平台上都可用，该选项应被省略）。键是短的标识符;使用中的例子包括“IRIX”、“Mac”、“Windows”和“Unix”。在适当的时候使用已经使用过的密钥是重要的。"

#: ../../sphinx/doc/usage/domains/python.rst:39
msgid ""
"Consist of one sentence describing the module's purpose -- it is currently "
"only used in the Global Module Index."
msgstr "由描述模块用途的一句话组成——它目前只在全局模块索引中使用。"

#: ../../sphinx/doc/usage/domains/python.rst:45
msgid ""
"Mark a module as deprecated; it will be designated as such in various "
"locations then."
msgstr "将模块标记为已弃用；届时，它将在不同的地点被指定为这样的场所。"

#: ../../sphinx/doc/usage/domains/python.rst:51
msgid ""
"This directive tells Sphinx that the classes, functions etc. documented from"
" here are in the given module (like :rst:dir:`py:module`), but it will not "
"create index entries, an entry in the Global Module Index, or a link target "
"for :rst:role:`py:mod`.  This is helpful in situations where documentation "
"for things in a module is spread over multiple files or sections -- one "
"location has the :rst:dir:`py:module` directive, the others only "
":rst:dir:`py:currentmodule`."
msgstr ""
"该指令告诉Sphinx，这里记录的类，函数等都在给定的模块中(如 "
":rst:dir:`py:module`)，但它不会创建索引条目，全局模块索引中的条目，或者一个链接目标  :rst:role:`py:mod` "
"。这在模块中的事物文档分布在多个文件或部分的情况下很有用 - 一个位置具有 :rst:dir:`py:module`  "
"指令，其他只有:rst:dir:`py:currentmodule` 。"

#: ../../sphinx/doc/usage/domains/python.rst:59
msgid "The following directives are provided for module and class contents:"
msgstr "为模块和类内容提供以下指令："

#: ../../sphinx/doc/usage/domains/python.rst:64
msgid ""
"Describes a module-level function. The signature should include the "
"parameters, together with optional type parameters, as given in the Python "
"function definition, see :ref:`signatures`. For example::"
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:73
msgid "For methods you should use :rst:dir:`py:method`."
msgstr "您应该使用的方法 :rst:dir:`py:method` 。"

#: ../../sphinx/doc/usage/domains/python.rst:75
msgid ""
"The description normally includes information about the parameters required "
"and how they are used (especially whether mutable objects passed as "
"parameters are modified), side effects, and possible exceptions."
msgstr "描述通常包括有关所需参数及其使用方式的信息（特别是是否修改了作为参数传递的可变对象，副作用和可能的异常。"

#: ../../sphinx/doc/usage/domains/python.rst:79
msgid ""
"This information can (in any ``py`` directive) optionally be given in a "
"structured form, see :ref:`info-field-lists`."
msgstr "这个信息可以(在任何 “py” 指令中)可选地以结构化形式给出，参见:ref:`信息字段列表 `。"

#: ../../sphinx/doc/usage/domains/python.rst:87
msgid "Indicate the function is an async function."
msgstr "指出该函数是一个异步函数。"

#: ../../sphinx/doc/usage/domains/python.rst:94
#: ../../sphinx/doc/usage/domains/python.rst:145
#: ../../sphinx/doc/usage/domains/python.rst:223
#: ../../sphinx/doc/usage/domains/python.rst:278
#: ../../sphinx/doc/usage/domains/python.rst:345
msgid ""
"Describe the location where the object is defined if the object is imported "
"from other modules"
msgstr "如果对象是从其他模块导入的，请描述定义对象的位置。"

#: ../../sphinx/doc/usage/domains/python.rst:108
msgid ""
"Ensures that the function's arguments will be emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:117
msgid ""
"Ensure that the function's type parameters are emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:126
msgid ""
"Describes global data in a module, including both variables and values used "
"as \"defined constants.\"  Class and object attributes are not documented "
"using this environment."
msgstr "描述模块中的全局数据，包括用作“定义的常量”的变量和值。使用此环境不记录类和对象属性。"

#: ../../sphinx/doc/usage/domains/python.rst:160
msgid ""
"Describes an exception class. The signature can, but need not include "
"parentheses with constructor arguments, or may optionally include type "
"parameters (see :pep:`695`)."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:169
#: ../../sphinx/doc/usage/domains/python.rst:231
msgid "Indicate the class is a final class."
msgstr "指明这个类是最后一个类。"

#: ../../sphinx/doc/usage/domains/python.rst:182
msgid "See :rst:dir:`py:class:single-line-parameter-list`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:189
msgid "See :rst:dir:`py:class:single-line-type-parameter-list`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:197
msgid ""
"Describes a class. The signature can optionally include type parameters (see"
" :pep:`695`) or parentheses with parameters which will be shown as the "
"constructor arguments. See also :ref:`signatures`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:202
msgid ""
"Methods and attributes belonging to the class should be placed in this "
"directive's body.  If they are placed outside, the supplied name should "
"contain the class name so that cross-references still work.  Example::"
msgstr "属于该类的方法和属性应放在此指令的主体中。如果将它们放在外面，则提供的名称应包含类名，以便交叉引用仍然有效。例："

#: ../../sphinx/doc/usage/domains/python.rst:216
msgid "The first way is the preferred one."
msgstr "第一种方式是首选方式。"

#: ../../sphinx/doc/usage/domains/python.rst:244
msgid ""
"Ensures that the class constructor's arguments will be emitted on a single "
"logical line, overriding :confval:`python_maximum_signature_line_length` and"
" :confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:253
msgid ""
"Ensure that the class type parameters are emitted on a single logical line, "
"overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:259
msgid ""
"Describes an object data attribute.  The description should include "
"information about the type of the data to be expected and whether it may be "
"changed directly."
msgstr "描述对象数据属性。描述应包括有关预期数据类型的信息以及是否可以直接更改。"

#: ../../sphinx/doc/usage/domains/python.rst:291
msgid "Describes an object property."
msgstr "描述一个对象的属性。"

#: ../../sphinx/doc/usage/domains/python.rst:300
msgid "Indicate the property is abstract."
msgstr "表明该属性是抽象的。"

#: ../../sphinx/doc/usage/domains/python.rst:305
msgid "Indicate the property is a classmethod."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:321
msgid ""
"Describes an object method.  The parameters should not include the ``self`` "
"parameter.  The description should include similar information to that "
"described for ``function``.  See also :ref:`signatures` and :ref:`info-"
"field-lists`."
msgstr ""
"描述对象方法。参数不应包含 self 参数。描述应该包括与“function”描述的类似的信息。另见 :ref:`签名` 和:ref:`信息字段列表` "
"。"

#: ../../sphinx/doc/usage/domains/python.rst:331
msgid "Indicate the method is an abstract method."
msgstr "指明该方法是抽象方法。"

#: ../../sphinx/doc/usage/domains/python.rst:338
msgid "Indicate the method is an async method."
msgstr "指明该方法是一个异步方法。"

#: ../../sphinx/doc/usage/domains/python.rst:353
msgid "Indicate the method is a class method."
msgstr "指明该方法是一个类方法。"

#: ../../sphinx/doc/usage/domains/python.rst:360
msgid "Indicate the method is a final method."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:373
msgid ""
"Ensures that the method's arguments will be emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:382
msgid ""
"Ensure that the method's type parameters are emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:391
msgid "Indicate the method is a static method."
msgstr "指明该方法是抽象方法。"

#: ../../sphinx/doc/usage/domains/python.rst:399
msgid ""
"Like :rst:dir:`py:method`, but indicates that the method is a static method."
msgstr "像 :rst:dir:`py:method`，但表示该方法是静态方法。"

#: ../../sphinx/doc/usage/domains/python.rst:406
msgid ""
"Like :rst:dir:`py:method`, but indicates that the method is a class method."
msgstr "像 :rst:dir:`py:method`，但表示该方法是一个类方法。"

#: ../../sphinx/doc/usage/domains/python.rst:414
msgid ""
"Describes a decorator function.  The signature should represent the usage as"
" a decorator.  For example, given the functions"
msgstr "描述装饰器函数。签名应该表示作为装饰器的用法。例如，给定函数"

#: ../../sphinx/doc/usage/domains/python.rst:429
msgid "the descriptions should look like this::"
msgstr "描述应如下所示::"

#: ../../sphinx/doc/usage/domains/python.rst:439
msgid "(as opposed to ``.. py:decorator:: removename(func)``.)"
msgstr "（而不是“.. py:装饰器:: removename(func)”。）"

#: ../../sphinx/doc/usage/domains/python.rst:441
msgid ""
"There is no ``py:deco`` role to link to a decorator that is marked up with "
"this directive; rather, use the :rst:role:`py:func` role."
msgstr "没有“py:deco”角色链接到用这个指令标记的装饰器；相反，使用:rst:role:`py:func` 角色。"

#: ../../sphinx/doc/usage/domains/python.rst:447
msgid ""
"Ensures that the decorator's arguments will be emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:456
msgid ""
"Ensure that the decorator's type parameters are emitted on a single logical "
"line, overriding :confval:`python_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:466
msgid "Same as :rst:dir:`py:decorator`, but for decorators that are methods."
msgstr "与 :rst:dir:`py:装饰器`相同，但对于作为方法的装饰器。"

#: ../../sphinx/doc/usage/domains/python.rst:468
msgid "Refer to a decorator method using the :rst:role:`py:meth` role."
msgstr "使用 :rst:role:`py:meth` 角色引用装饰器方法。"

#: ../../sphinx/doc/usage/domains/python.rst:473
msgid "Python Signatures"
msgstr "Python签名"

#: ../../sphinx/doc/usage/domains/python.rst:475
msgid ""
"Signatures of functions, methods and class constructors can be given like "
"they would be written in Python."
msgstr "函数，方法和类构造函数的签名可以像在Python中编写一样给出。"

#: ../../sphinx/doc/usage/domains/python.rst:478
msgid ""
"Default values for optional arguments can be given (but if they contain "
"commas, they will confuse the signature parser).  Python 3-style argument "
"annotations can also be given as well as return type annotations::"
msgstr "可以给出可选参数的默认值(但如果它们包含逗号，则会混淆签名解析器)。还可以给出Python 3样式的参数注释以及返回类型注释："

#: ../../sphinx/doc/usage/domains/python.rst:484
msgid ""
"For functions with optional parameters that don't have default values "
"(typically functions implemented in C extension modules without keyword "
"argument support), you can use brackets to specify the optional parts:"
msgstr "对于具有可选参数但没有默认值的函数(通常在没有关键字参数支持的C扩展模块中实现的函数)，可以使用括号指定可选部分："

#: ../../sphinx/doc/usage/domains/python.rst:492
msgid "It is customary to put the opening bracket before the comma."
msgstr "习惯上将开口括号放在逗号之前。"

#: ../../sphinx/doc/usage/domains/python.rst:494
msgid ""
"Python 3.12 introduced *type parameters*, which are type variables declared "
"directly  within the class or function definition:"
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:505
msgid "The corresponding reStructuredText documentation would be:"
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:513
msgid "See :pep:`695` and :pep:`696` for details and the full specification."
msgstr ""

#: ../../sphinx/doc/usage/domains/python.rst:518
msgid "Info field lists"
msgstr "信息字段列表"

#: ../../sphinx/doc/usage/domains/python.rst:523
msgid "meta fields are added."
msgstr "元字段被添加。"

#: ../../sphinx/doc/usage/domains/python.rst:525
msgid ""
"Inside Python object description directives, reST field lists with these "
"fields are recognized and formatted nicely:"
msgstr "在Python对象描述指令中，具有这些字段的reST字段列表可以很好地识别和格式化："

#: ../../sphinx/doc/usage/domains/python.rst:528
msgid ""
"``param``, ``parameter``, ``arg``, ``argument``, ``key``, ``keyword``: "
"Description of a parameter."
msgstr "“`param”，“parameter”，“arg”, “argument”，“key”，“keyword”：描述一个参数。"

#: ../../sphinx/doc/usage/domains/python.rst:530
msgid "``type``: Type of a parameter.  Creates a link if possible."
msgstr "“type”：参数的类型。如果可能，创建一个链接。"

#: ../../sphinx/doc/usage/domains/python.rst:531
msgid ""
"``raises``, ``raise``, ``except``, ``exception``: That (and when) a specific"
" exception is raised."
msgstr "“raises”，“raise”，“except”，“exception”：指（当）引一个特定的异常抛出。"

#: ../../sphinx/doc/usage/domains/python.rst:533
msgid "``var``, ``ivar``, ``cvar``: Description of a variable."
msgstr "\"var，“ivar”，“cvar”：变量的描述。"

#: ../../sphinx/doc/usage/domains/python.rst:534
msgid "``vartype``: Type of a variable.  Creates a link if possible."
msgstr "“vartype”：变量类型。 如果可能，创建一个链接。"

#: ../../sphinx/doc/usage/domains/python.rst:535
msgid "``returns``, ``return``: Description of the return value."
msgstr "“returns”，“return”： 返回值的描述。"

#: ../../sphinx/doc/usage/domains/python.rst:536
msgid "``rtype``: Return type.  Creates a link if possible."
msgstr "“rtype”：返回类型。 如果可能，创建一个链接。"

#: ../../sphinx/doc/usage/domains/python.rst:537
msgid ""
"``meta``: Add metadata to description of the python object.  The metadata "
"will not be shown on output document.  For example, ``:meta private:`` "
"indicates the python object is private member.  It is used in "
":py:mod:`sphinx.ext.autodoc` for filtering members."
msgstr ""
"\"meta”：python对象的描述中添加元数据。元数据不会显示在输出文档中。例如，“:meta private: "
"”表示python对象是私有成员。它被用于:py:mod:sphinx.ext.autodoc`，筛选成员。"

#: ../../sphinx/doc/usage/domains/python.rst:544
msgid ""
"In current release, all ``var``, ``ivar`` and ``cvar`` are represented as "
"\"Variable\".  There is no difference at all."
msgstr "在当前版本中，所有\"var，“ivar”，“cvar”都表示为 “Variable（变量）” 。完全没有区别。"

#: ../../sphinx/doc/usage/domains/python.rst:547
msgid ""
"The field names must consist of one of these keywords and an argument "
"(except for ``returns`` and ``rtype``, which do not need an argument).  This"
" is best explained by an example::"
msgstr "字段名称必须包含这些关键字之一和参数（除了“returns”和“rtype”，它们不需要参数）。这可以用一个例子来解释："

#: ../../sphinx/doc/usage/domains/python.rst:565
msgid "This will render like this:"
msgstr "这将呈现如下："

#: ../../sphinx/doc/usage/domains/python.rst:571
msgid "Send a message to a recipient"
msgstr "向收件人发送邮件"

#: ../../sphinx/doc/usage/domains/python.rst:0
msgid "Parameters"
msgstr "参数"

#: ../../sphinx/doc/usage/domains/python.rst:573
msgid "The person sending the message"
msgstr "发送消息的人"

#: ../../sphinx/doc/usage/domains/python.rst:574
msgid "The recipient of the message"
msgstr "邮件的收件人"

#: ../../sphinx/doc/usage/domains/python.rst:575
msgid "The body of the message"
msgstr "消息的正文"

#: ../../sphinx/doc/usage/domains/python.rst:576
msgid "The priority of the message, can be a number 1-5"
msgstr "消息的优先级可以是1-5"

#: ../../sphinx/doc/usage/domains/python.rst:0
msgid "Returns"
msgstr "返回"

#: ../../sphinx/doc/usage/domains/python.rst:578
msgid "the message id"
msgstr "消息ID"

#: ../../sphinx/doc/usage/domains/python.rst:0
msgid "Return type"
msgstr "返回类型"

#: ../../sphinx/doc/usage/domains/python.rst:0
msgid "Raises"
msgstr "引发"

#: ../../sphinx/doc/usage/domains/python.rst:580
msgid "if the message_body exceeds 160 characters"
msgstr "如果信息主体超过160个字符"

#: ../../sphinx/doc/usage/domains/python.rst:581
msgid "if the message_body is not a basestring"
msgstr "如果信息主体不是基本字符串"

#: ../../sphinx/doc/usage/domains/python.rst:583
msgid ""
"It is also possible to combine parameter type and description, if the type "
"is a single word, like this::"
msgstr "如果类型是单个单词，也可以组合参数类型和描述，如下："

#: ../../sphinx/doc/usage/domains/python.rst:590
msgid ""
"Container types such as lists and dictionaries can be linked automatically "
"using the following syntax::"
msgstr "可以使用以下语法自动链接容器类型，如列表和词典::"

#: ../../sphinx/doc/usage/domains/python.rst:600
msgid ""
"Multiple types in a type field will be linked automatically if separated by "
"the word \"or\"::"
msgstr "如果用单词“或”分隔，则类型字段中的多个类型将自动链接::"

#: ../../sphinx/doc/usage/domains/python.rst:610
msgid "Cross-referencing Python objects"
msgstr "交叉引用Python对象"

#: ../../sphinx/doc/usage/domains/python.rst:612
msgid ""
"The following roles refer to objects in modules and are possibly hyperlinked"
" if a matching identifier is found:"
msgstr "以下角色引用模块中的对象，如果找到匹配的标识符，则可能是超链接："

#: ../../sphinx/doc/usage/domains/python.rst:617
msgid ""
"Reference a module; a dotted name may be used.  This should also be used for"
" package names."
msgstr "参考模块；可以使用虚线名称，这也应该用于包名称。"

#: ../../sphinx/doc/usage/domains/python.rst:622
msgid ""
"Reference a Python function; dotted names may be used.  The role text needs "
"not include trailing parentheses to enhance readability; they will be added "
"automatically by Sphinx if the :confval:`add_function_parentheses` config "
"value is ``True`` (the default)."
msgstr ""
"引用Python函数；可以使用带虚线的名称。角色文本不需要包括尾随括号以增强可读性；如果:confval:`add_function_parentheses`"
" 配置值为“ True” (默认值)，它们将由Sphinx自动添加。"

#: ../../sphinx/doc/usage/domains/python.rst:629
msgid "Reference a module-level variable."
msgstr "引用模块级变量。"

#: ../../sphinx/doc/usage/domains/python.rst:633
msgid ""
"Reference a \"defined\" constant.  This may be a Python variable that is not"
" intended to be changed."
msgstr "引用一个“定义的”常量。这可能是一个不打算更改的 Python 变量。"

#: ../../sphinx/doc/usage/domains/python.rst:638
msgid "Reference a class; a dotted name may be used."
msgstr "引用一个类；可以使用虚线名称。"

#: ../../sphinx/doc/usage/domains/python.rst:642
msgid ""
"Reference a method of an object.  The role text can include the type name "
"and the method name; if it occurs within the description of a type, the type"
" name can be omitted.  A dotted name may be used."
msgstr "引用对象的方法。角色文本可以包括类型名称和方法名称；如果它出现在类型的描述中，则可以省略类型名称。可以使用点状名称。"

#: ../../sphinx/doc/usage/domains/python.rst:648
msgid "Reference a data attribute of an object."
msgstr "引用对象的数据属性。"

#: ../../sphinx/doc/usage/domains/python.rst:650
msgid "The role is also able to refer to property."
msgstr "也可以指向属性。"

#: ../../sphinx/doc/usage/domains/python.rst:654
msgid "Reference an exception.  A dotted name may be used."
msgstr "引用一个例外。可以使用带虚线的名称。"

#: ../../sphinx/doc/usage/domains/python.rst:658
msgid ""
"Reference an object of unspecified type.  Useful e.g. as the "
":confval:`default_role`."
msgstr "引用未指定类型的对象。例如有用 :confval:`default_role`。"

#: ../../sphinx/doc/usage/domains/python.rst:663
msgid ""
"The name enclosed in this markup can include a module name and/or a class "
"name. For example, ``:py:func:`filter``` could refer to a function named "
"``filter`` in the current module, or the built-in function of that name.  In"
" contrast, ``:py:func:`foo.filter``` clearly refers to the ``filter`` "
"function in the ``foo`` module."
msgstr ""
"此标记中包含的名称可以包括模块名称和/或类名称。例如，“`:py:func:`filter”可以引用当前模块中名为“filter”的函数，或者该名称的内置函数。相比之下，“:py:func:`foo.filter`”清楚地引用了“foo”模块中的“filter”函数。"

#: ../../sphinx/doc/usage/domains/python.rst:669
msgid ""
"Normally, names in these roles are searched first without any further "
"qualification, then with the current module name prepended, then with the "
"current module and class name (if any) prepended.  If you prefix the name "
"with a dot, this order is reversed.  For example, in the documentation of "
"Python's :mod:`codecs` module, ``:py:func:`open``` always refers to the "
"built-in function, while ``:py:func:`.open``` refers to :func:`codecs.open`."
msgstr ""
"通常，首先搜索这些角色中的名称而不进一步限定，然后将当前模块名称添加到前面，然后使用当前模块和类名（如果有）作为前缀。如果您在名称前加一个点，则此顺序相反。例如，在Python的文档“"
" :mod:`codecs` "
"”模块中，“:py:func:`open`”总是引用内置函数，而“:py:func:`.open`”指“:func:`codecs.open`”。"

#: ../../sphinx/doc/usage/domains/python.rst:676
msgid ""
"A similar heuristic is used to determine whether the name is an attribute of"
" the currently documented class."
msgstr "类似的启发式方法用于确定名称是否是当前记录的类的属性。"

#: ../../sphinx/doc/usage/domains/python.rst:679
msgid ""
"Also, if the name is prefixed with a dot, and no exact match is found, the "
"target is taken as a suffix and all object names with that suffix are "
"searched. For example, ``:py:meth:`.TarFile.close``` references the "
"``tarfile.TarFile.close()`` function, even if the current module is not "
"``tarfile``.  Since this can get ambiguous, if there is more than one "
"possible match, you will get a warning from Sphinx."
msgstr ""
"此外，如果名称以点为前缀，并且未找到完全匹配，则将目标作为后缀，并搜索具有该后缀的所有对象名称。例如，“:py:meth:`.TarFile.close`”引用“tarfile.TarFile.close()”函数，即使当前模块不是“tarfile”。由于这可能会变得模棱两可，如果有多个可能匹配，您将收到Sphinx的警告。"

#: ../../sphinx/doc/usage/domains/python.rst:686
msgid ""
"Note that you can combine the ``~`` and ``.`` prefixes: "
"``:py:meth:`~.TarFile.close``` will reference the "
"``tarfile.TarFile.close()`` method, but the visible link caption will only "
"be ``close()``."
msgstr ""
"请注意，您可以组合使用“~”和“.”前缀：“:py:meth:`”~.TarFile.close`”将引用“tarfile.TarFile.close()”方法，但可见的链接标题只是“close()”。"
