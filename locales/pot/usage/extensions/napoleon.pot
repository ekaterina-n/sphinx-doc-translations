# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 00:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:2
msgid ":mod:`sphinx.ext.napoleon` -- Support for NumPy and Google style docstrings"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:15
msgid "Overview"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:19
msgid "Are you tired of writing docstrings that look like this::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:31
msgid "`reStructuredText`_ is great, but it creates visually dense, hard to read :pep:`docstrings <287>`. Compare the jumble above to the same thing rewritten according to the `Google Python Style Guide`_::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:44
msgid "Much more legible, no?"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:46
msgid "Napoleon is a :term:`extension` that enables Sphinx to parse both `NumPy`_ and `Google`_ style docstrings - the style recommended by `Khan Academy`_."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:49
msgid "Napoleon is a pre-processor that parses `NumPy`_ and `Google`_ style docstrings and converts them to reStructuredText before Sphinx attempts to parse them. This happens in an intermediate step while Sphinx is processing the documentation, so it doesn't modify any of the docstrings in your actual source code files."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:66
msgid "Getting Started"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:68
msgid "After :doc:`setting up Sphinx </usage/quickstart>` to build your docs, enable napoleon in the Sphinx ``conf.py`` file::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:76
msgid "Use ``sphinx-apidoc`` to build your API documentation::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:82
msgid "Docstrings"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:84
msgid "Napoleon interprets every docstring that :mod:`autodoc <sphinx.ext.autodoc>` can find, including docstrings on: ``modules``, ``classes``, ``attributes``, ``methods``, ``functions``, and ``variables``. Inside each docstring, specially formatted `Sections`_ are parsed and converted to reStructuredText."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:90
msgid "All standard reStructuredText formatting still works as expected."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:96
msgid "Docstring Sections"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:98
msgid "All of the following section headers are supported:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:100
msgid "``Args`` *(alias of Parameters)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:101
msgid "``Arguments`` *(alias of Parameters)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:102
msgid "``Attention``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:103
msgid "``Attributes``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:104
msgid "``Caution``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:105
msgid "``Danger``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:106
msgid "``Error``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:107
msgid "``Example``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:108
msgid "``Examples``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:109
msgid "``Hint``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:110
msgid "``Important``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:111
msgid "``Keyword Args`` *(alias of Keyword Arguments)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:112
msgid "``Keyword Arguments``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:113
msgid "``Methods``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:114
msgid "``Note``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:115
msgid "``Notes``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:116
msgid "``Other Parameters``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:117
msgid "``Parameters``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:118
msgid "``Return`` *(alias of Returns)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:119
msgid "``Returns``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:120
msgid "``Raise`` *(alias of Raises)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:121
msgid "``Raises``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:122
msgid "``References``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:123
msgid "``See Also``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:124
msgid "``Tip``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:125
msgid "``Todo``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:126
msgid "``Warning``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:127
msgid "``Warnings`` *(alias of Warning)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:128
msgid "``Warn`` *(alias of Warns)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:129
msgid "``Warns``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:130
msgid "``Yield`` *(alias of Yields)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:131
msgid "``Yields``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:134
msgid "Google vs NumPy"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:136
msgid "Napoleon supports two styles of docstrings: `Google`_ and `NumPy`_. The main difference between the two styles is that Google uses indentation to separate sections, whereas NumPy uses underlines."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:140
msgid "Google style:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:159
msgid "NumPy style:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:183
msgid "NumPy style tends to require more vertical space, whereas Google style tends to use more horizontal space. Google style tends to be easier to read for short and simple docstrings, whereas NumPy style tends be easier to read for long and in-depth docstrings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:188
msgid "The choice between styles is largely aesthetic, but the two styles should not be mixed. Choose one style for your project and be consistent with it."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:193
msgid "For complete examples:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:195
msgid ":ref:`example_google`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:196
msgid ":ref:`example_numpy`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:200
msgid "Type Annotations"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:202
msgid ":pep:`484` introduced a standard way to express types in Python code. This is an alternative to expressing types directly in docstrings. One benefit of expressing types according to :pep:`484` is that type checkers and IDEs can take advantage of them for static code analysis. :pep:`484` was then extended by :pep:`526` which introduced a similar way to annotate variables (and attributes)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:209
msgid "Google style with Python 3 type annotations::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:239
msgid "Google style with types in docstrings::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:267
msgid "`Python 2/3 compatible annotations`_ aren't currently supported by Sphinx and won't show up in the docs."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:274
msgid "Configuration"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:276
msgid "Listed below are all the settings used by napoleon and their default values. These settings can be changed in the Sphinx ``conf.py`` file. Make sure that \"sphinx.ext.napoleon\" is enabled in ``conf.py``::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:0
msgid "Type"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:0
msgid "Default"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:310
msgid "True to parse `Google style`_ docstrings. False to disable support for Google style docstrings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:317
msgid "True to parse `NumPy style`_ docstrings. False to disable support for NumPy style docstrings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:324
msgid "True to list ``__init___`` docstrings separately from the class docstring. False to fall back to Sphinx's default behavior, which considers the ``__init___`` docstring as part of the class documentation."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:329
#: ../../sphinx/doc/usage/extensions/napoleon.rst:346
#: ../../sphinx/doc/usage/extensions/napoleon.rst:366
#: ../../sphinx/doc/usage/extensions/napoleon.rst:393
#: ../../sphinx/doc/usage/extensions/napoleon.rst:444
#: ../../sphinx/doc/usage/extensions/napoleon.rst:473
#: ../../sphinx/doc/usage/extensions/napoleon.rst:518
msgid "**If True**::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:343
msgid "True to include private members (like ``_membername``) with docstrings in the documentation. False to fall back to Sphinx's default behavior."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:362
msgid "True to include special members (like ``__membername__``) with docstrings in the documentation. False to fall back to Sphinx's default behavior."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:382
msgid "True to use the ``.. admonition::`` directive for the **Example** and **Examples** sections. False to use the ``.. rubric::`` directive instead. One may look better than the other depending on what HTML theme is used."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:387
#: ../../sphinx/doc/usage/extensions/napoleon.rst:437
#: ../../sphinx/doc/usage/extensions/napoleon.rst:464
#: ../../sphinx/doc/usage/extensions/napoleon.rst:511
msgid "This `NumPy style`_ snippet will be converted as follows::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:399
#: ../../sphinx/doc/usage/extensions/napoleon.rst:449
#: ../../sphinx/doc/usage/extensions/napoleon.rst:480
#: ../../sphinx/doc/usage/extensions/napoleon.rst:523
msgid "**If False**::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:409
msgid "True to use the ``.. admonition::`` directive for **Notes** sections. False to use the ``.. rubric::`` directive instead."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:412
msgid "The singular **Note** section will always be converted to a ``.. note::`` directive."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:417
#: ../../sphinx/doc/usage/extensions/napoleon.rst:428
msgid ":confval:`napoleon_use_admonition_for_examples`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:423
msgid "True to use the ``.. admonition::`` directive for **References** sections. False to use the ``.. rubric::`` directive instead."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:434
msgid "True to use the ``:ivar:`` role for instance variables. False to use the ``.. attribute::`` directive instead."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:461
msgid "True to use a ``:param:`` role for each function parameter. False to use a single ``:parameters:`` role for all the parameters."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:491
msgid "True to use a ``:keyword:`` role for each function keyword argument. False to use a single ``:keyword arguments:`` role for all the keywords."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:495
msgid "This behaves similarly to :confval:`napoleon_use_param`. Note unlike docutils, ``:keyword:`` and ``:param:`` will not be treated the same way - there will be a separate \"Keyword Arguments\" section, rendered in the same fashion as \"Parameters\" section (type links created if possible)"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:502
msgid ":confval:`napoleon_use_param`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:508
msgid "True to use the ``:rtype:`` role for the return type. False to output the return type inline with the description."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:531
msgid "True to convert the type definitions in the docstrings as references."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:536
msgid "Do preprocess the Google style docstrings also."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:542
msgid "A mapping to translate type names to other names or references. Works only when ``napoleon_use_param = True``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:545
msgid "With::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:552
msgid "This `NumPy style`_ snippet::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:561
msgid "becomes::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:574
msgid "True to allow using :pep:`526` attributes annotations in classes. If an attribute is documented in the docstring without a type and has an annotation in the class body, that type is used."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:584
msgid "Add a list of custom sections to include, expanding the list of parsed sections."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:586
msgid "The entries can either be strings or tuples, depending on the intention:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:588
msgid "To create a custom \"generic\" section, just pass a string."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:589
msgid "To create an alias for an existing section, pass a tuple containing the alias name and the original, in that order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:591
msgid "To create a custom section that displays like the parameters or returns section, pass a tuple containing the custom section name and a string value, \"params_style\" or \"returns_style\"."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:595
msgid "If an entry is just a string, it is interpreted as a header for a generic section. If the entry is a tuple/list/indexed container, the first entry is the name of the section, the second is the section key to emulate. If the second entry value is \"params_style\" or \"returns_style\", the custom section will be displayed like the parameters section or returns section."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:602
msgid "Support ``params_style`` and ``returns_style``"
msgstr ""
