# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Vladimir Milovanović <vmilovanovic@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-21 00:51+0000\n"
"PO-Revision-Date: 2018-06-26 15:59+0000\n"
"Last-Translator: Vladimir Milovanović <vmilovanovic@gmail.com>, 2020\n"
"Language-Team: Serbian (https://app.transifex.com/sphinx-doc/teams/15434/sr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sr\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../sphinx/doc/usage/extensions/inheritance.rst:4
msgid ":mod:`sphinx.ext.inheritance_diagram` -- Include inheritance diagrams"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:14
msgid ""
"This extension allows you to include inheritance diagrams, rendered via the "
":mod:`Graphviz extension <sphinx.ext.graphviz>`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:17
msgid "It adds this directive:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:21
msgid ""
"This directive has one or more arguments, each giving a module or class "
"name.  Class names can be unqualified; in that case they are taken to exist "
"in the currently described module (see :rst:dir:`py:module`)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:25
msgid ""
"For each given class, and each class in each given module, the base classes "
"are determined.  Then, from all classes and their base classes, a graph is "
"generated which is then rendered via the graphviz extension to a directed "
"graph."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:30
msgid ""
"This directive supports an option called ``parts`` that, if given, must be "
"an integer, advising the directive to keep that many dot-separated parts in "
"the displayed names (from right to left). For example, ``parts=1`` will only"
" display class names, without the names of the modules that contain them."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:36
msgid ""
"The value of for ``parts`` can also be negative, indicating how many parts "
"to drop from the left.  For example, if all your class names start with "
"``lib.``, you can give ``:parts: -1`` to remove that prefix from the "
"displayed node names."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:42
msgid ""
"The directive also supports a ``private-bases`` flag option; if given, "
"private base classes (those whose name starts with ``_``) will be included."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:45
msgid "You can use ``caption`` option to give a caption to the diagram."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:47
msgid ""
"Added ``private-bases`` option; previously, all bases were always included."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:51
msgid "Added ``caption`` option"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:54
msgid ""
"It also supports a ``top-classes`` option which requires one or more class "
"names separated by comma. If specified inheritance traversal will stop at "
"the specified class names. Given the following Python module::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:84
msgid "If you have specified a module in the inheritance diagram like this::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:89
msgid ""
"any base classes which are ancestors to ``top-classes`` and are also defined"
" in the same module will be rendered as stand alone nodes. In this example "
"class A will be rendered as stand alone node in the graph. This is a known "
"issue due to how this extension works internally."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:94
msgid ""
"If you don't want class A (or any other ancestors) to be visible then "
"specify only the classes you would like to generate the diagram for like "
"this::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:100
msgid "Added ``top-classes`` option to limit the scope of inheritance graphs."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:108
msgid ""
"If given, any subclass of the classes will be added to the diagram too."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:110
msgid ""
"Given the Python module from above, you can specify your inheritance diagram"
" like this:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:118
msgid ""
"This will include the classes A, B, C, D, E and F in the inheritance diagram"
" but no other classes in the module ``dummy.test``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:123
msgid "Examples"
msgstr "Примери"

#: ../../sphinx/doc/usage/extensions/inheritance.rst:125
msgid ""
"The following are different inheritance diagrams for the internal "
"``InheritanceDiagram`` class that implements the directive."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:128
msgid "With full names::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:135
msgid "Showing class names only::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:143
msgid ""
"Stopping the diagram at :class:`sphinx.util.docutils.SphinxDirective` (the "
"highest superclass still part of Sphinx), and dropping the common left-most "
"part (``sphinx``) from all names::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:159
msgid ""
"The internal class that implements the ``inheritance-diagram`` directive."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:163
msgid "Configuration"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:0
msgid "Type"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:0
msgid "Default"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:169
msgid "A dictionary of graphviz graph attributes for inheritance diagrams."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:171
#: ../../sphinx/doc/usage/extensions/inheritance.rst:182
#: ../../sphinx/doc/usage/extensions/inheritance.rst:201
msgid "For example::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:180
msgid "A dictionary of graphviz node attributes for inheritance diagrams."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:191
msgid "A dictionary of graphviz edge attributes for inheritance diagrams."
msgstr ""

#: ../../sphinx/doc/usage/extensions/inheritance.rst:197
msgid ""
"Allows mapping the full qualified name of the class to custom values (useful"
" when exposing the underlying path of a class is not desirable, e.g. it's a "
"private class and should not be instantiated by the user)."
msgstr ""
